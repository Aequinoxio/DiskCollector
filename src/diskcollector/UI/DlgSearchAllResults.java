/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diskcollector.UI;

import diskcollector.NodeTypes.FilesystemNodeInformation;
import diskcollector.NodeTypes.NodeInformation;
import diskcollector.NodeTypes.NodeType;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 * Mostra e gestisce le ricerce complete su tutto il tree
 * 
 * @author utente
 */
public class DlgSearchAllResults extends javax.swing.JDialog {

    DefaultTableModel m_TableModel;
    ArrayList<DefaultMutableTreeNode> m_treeNodes;
    JTree m_tree;   // Tree da aggiornare al doppio click su una cella
    private TableRowSorter<TableModel> m_rowSorter;

    /**
     * Creates new form blgSearchAllResults
     *
     * @param parent 
     * @param modal 
     * @param tree Tree da aggiornare
     */
    public DlgSearchAllResults(java.awt.Frame parent, boolean modal, JTree tree) {
        super(parent, modal);

        initComponents();

        this.m_tree = tree;

        m_TableModel = (DefaultTableModel) tblSearchResults.getModel();
        m_rowSorter = new TableRowSorter<>(m_TableModel);
        m_rowSorter.setSortsOnUpdates(true);
        tblSearchResults.setRowSorter(m_rowSorter);

        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                setRowFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                setRowFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                setRowFilter();
            }
        });
    }

    /**
     * Imposta il filtro per le righe
     * 
     * From https://docs.oracle.com/javase/tutorial/uiswing/examples/components/TableFilterDemoProject/src/components/TableFilterDemo.java
     */
    private void setRowFilter() {
        RowFilter<TableModel, Object> rf = null;
        //If current expression doesn't parse, don't update.
        try {
            rf = RowFilter.regexFilter(txtSearch.getText(), 0, 1, 2); // Cerco su tutte le colonne
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        m_rowSorter.setRowFilter(rf);
    }

    /**
     * Imposta la larghezza ottimale per le colonne
     * 
     * From https://tips4java.wordpress.com/2008/11/10/table-column-adjuster/
     */
    private void setOptimalTableSize() {

        for (int column = 0; column < tblSearchResults.getColumnCount(); column++) {
            TableColumn tableColumn = tblSearchResults.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getPreferredWidth();
            int maxWidth = tableColumn.getMaxWidth();

            for (int row = 0; row < tblSearchResults.getRowCount(); row++) {
                TableCellRenderer cellRenderer = tblSearchResults.getCellRenderer(row, column);
                Component c = tblSearchResults.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + tblSearchResults.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);

                //  We've exceeded the maximum width, no need to check other rows
                if (preferredWidth >= maxWidth) {
                    preferredWidth = maxWidth;
                    break;
                }
            }

            tableColumn.setPreferredWidth(preferredWidth);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSearchResults = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Risultati ricerca");

        tblSearchResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N.", "Valore", "Percorso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSearchResults.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tblSearchResults.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSearchResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSearchResultsMouseClicked(evt);
            }
        });
        tblSearchResults.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblSearchResultsKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblSearchResultsKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblSearchResults);

        btnClose.setText("Chiudi");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel1.setText("Cerca con una espressione regolare");

        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 442, Short.MAX_VALUE)
                        .addComponent(btnClose)
                        .addGap(0, 443, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained

    }//GEN-LAST:event_txtSearchFocusGained

    private void tblSearchResultsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSearchResultsKeyTyped

    }//GEN-LAST:event_tblSearchResultsKeyTyped

    private void tblSearchResultsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSearchResultsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            JTable target = (JTable) evt.getSource();
            scrollToSelectedRow(target.getSelectedRow());
        }

    }//GEN-LAST:event_tblSearchResultsKeyPressed

    private void tblSearchResultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSearchResultsMouseClicked
        if (evt.getClickCount() == 2) {
            JTable target = (JTable) evt.getSource();
            scrollToSelectedRow(target.getSelectedRow());
        }
    }//GEN-LAST:event_tblSearchResultsMouseClicked

    private void scrollToSelectedRow(int row) {

        DefaultMutableTreeNode defaultMutableTreeNode = m_treeNodes.get(row);
        TreePath treePath = new TreePath(defaultMutableTreeNode.getPath());
        //m_tree.fireTreeExpanded(treePath); // A cosa serve se non lancia un evento di simil click?
        m_tree.scrollPathToVisible(treePath);
        m_tree.setSelectionPath(treePath);

    }

    public void setSearchResults(ArrayList<DefaultMutableTreeNode> searchValues) {
        int counter = 1;
        int maxRows = searchValues.size();
        int numCifre = (int) (Math.log10(maxRows)) + 1;
        String printFormat = "%0" + String.valueOf(numCifre) + "d";

        m_treeNodes = searchValues;
        NodeType nodeType;
        for (DefaultMutableTreeNode node : m_treeNodes) {
            ArrayList<String> vTemp = new ArrayList<>();
            vTemp.add(String.format(printFormat, counter++));
            vTemp.add(node.toString());
            nodeType = ((NodeInformation) node.getUserObject()).getType();
            switch (nodeType) {
                case FOLDER:
                case FILE:
                    vTemp.add(((FilesystemNodeInformation) node.getUserObject()).getPath().toString());
                    break;
                default:
                    break;
            }
            m_TableModel.addRow(vTemp.toArray());
        }
        setOptimalTableSize();
    }

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DlgSearchAllResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DlgSearchAllResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DlgSearchAllResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DlgSearchAllResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DlgSearchAllResults dialog = new DlgSearchAllResults(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSearchResults;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
